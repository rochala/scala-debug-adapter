name: Release Expression Compiler (manual)
on:
  workflow_dispatch:
    inputs:
      scala-version:
        required: true

jobs:
  # test:
  #   strategy:
  #     fail-fast: false
  #   name: Test with Scala ${{ inputs.scala-version }} on ${{ inputs.tag }}
  #   runs-on: ubuntu-latest
  #   env:
  #     SCALA_VERSION: ${{ inputs.scala-version }}
  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       submodules: true
  #   - uses: coursier/setup-action@v1.3.5
  #     with:
  #       jvm: 'temurin:1.17.0.3'
  #       apps: sbt
  #   - name: Unit tests
  #     run: sbt test
  #     shell: bash
  publish:
    # if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    # needs: [test]
    env:
      SCALA_VERSION: ${{ inputs.scala-version }}
      PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
      SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: coursier/setup-action@v1.3.5
        with:
          apps: sbt
          jvm: 'adopt:1.8.0-292'
      - name: setup GPG secret key
        run: echo ${{ secrets.PGP_SECRET }} | base64 --decode | gpg --batch --import
      - name: publish task
        run: |
          VERSION=${{ inputs.scala-version }}
          echo $VERSION
          if [ $VERSION == 2.12.* ]; then
            echo "2.12 branch"
          fi
          if [ $VERSION == 2.13.* ]; then
            echo "2.13 branch"
          fi
          if [ $VERSION == 3.0.* ]; then
            echo "3.0 branch"
          fi

          if [ $VERSION == 3.1.* || $VERSION == 3.2.* || $VERSION == 3.3.* ]; then
            echo "3.1 branch"
          fi

          if [ $VERSION == 3.* ]; then
            echo "3.5"
          fi
